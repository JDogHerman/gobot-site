---
title: Gobot - Servo Driver
author: The Hybrid Group
page_title: Drivers
page_subtitle: Cylon has a extensible system for connecting to hardware devices.
page_title_docs: Servo
page_subtitle_docs: Driver
page_title_show: true
layout: documentation
subnav_driver: true
subnav_circuit_driver: true
active_menu_docs: true
subnavjs: true
---

%section.intro
  = image_tag "/images/devices/servo.jpg", class: "display"
  .info-intro
    %p Provides an interface for making servos easy to work and interact with from Gobot.
  .clear
  
%section.how-to#HowToConnect
  %h2 How To Connect
  :markdown
    Install the library with: `go get github.com/hybridgroup/gobot && go install github.com/hybridgroup/platforms/gpio`
  %h3 For Arduino:
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot/platforms/firmata"
          "github.com/hybridgroup/gobot/platforms/gpio"
          "time"
        )

        func main() {
          gbot := gobot.NewGobot()
          firmataAdaptor := firmata.NewFirmataAdaptor("firmata", "/dev/ttyACM0")
          servo := gpio.NewServoDriver(firmataAdaptor, "servo", "3")
        ...

%section.how-to#HowToUse
  %h2 How To Use
  %p
    This example moves a servo from a random angle.

  %h3 Example
  :markdown
        :::go
        package main

        import (
          "fmt"
          "time"

          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot/platforms/firmata"
          "github.com/hybridgroup/gobot/platforms/gpio"
        )

        func main() {
          gbot := gobot.NewGobot()

          firmataAdaptor := firmata.NewFirmataAdaptor("firmata", "/dev/ttyACM0")
          servo := gpio.NewServoDriver(firmataAdaptor, "servo", "3")

          work := func() {
            gobot.Every(1*time.Second, func() {
              i := uint8(gobot.Rand(180))
              fmt.Println("Turning", i)
              servo.Move(i)
            })
          }

          robot := gobot.NewRobot("servoBot",
            []gobot.Connection{firmataAdaptor},
            []gobot.Device{servo},
            work,
          )

          gbot.AddRobot(robot)
          gbot.Start()
        }
  
%section.public-methods
  .commands-api#Commands
    = partial "/documentation/drivers/partials/gpio/commands_servo"
  .commands-api#Events
    = partial "/documentation/drivers/partials/gpio/events_servo"   

%section.circuit#Circuit
  %h2 Circuit
  .description-circuit
    %p 
  .image-circuit 
    %img{:src => "/documentation/drivers/breadboards/gpio/servo_bb.png", :alt => ""}/ 
  .clear 
  
%section.compatability.hardware#Compatability
  %h2 Compatability
  .devices
    = partial "/partials/platforms_for_driver", locals: { driver: "Servo" }
