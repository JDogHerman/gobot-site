---
title: Gobot - Analog Sensor Driver
author: The Hybrid Group
page_title: Drivers
page_subtitle: Gobot has a extensible system for connecting to hardware devices.
page_title_docs: Analog Sensor
page_subtitle_docs: Driver
page_title_show: true
layout: documentation
subnav_driver: true
subnav_circuit_driver: true
active_menu_docs: true
subnavjs: true

arduino_platform: true
spark_platform: true
---
%section.intro
  = image_tag "/images/devices/analog-sensor.jpg", class: "display"
  .info-intro
    %p
      Makes it possible to interact with analog inputs on your device and obtain values that represent the analog input send by the sensors.
      The value received from an analog input read from the sensor goes from 0 to 1027.
  .clear

%section.how_to#HowToConnect
  %h2 How To Connect
  :markdown
    Install the library with: `go get github.com/hybridgroup/gobot && go install github.com/hybridgroup/platforms/gpio`
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot/platforms/firmata"
          "github.com/hybridgroup/gobot/platforms/gpio"
          "time"
        )

        func main() {
          gbot := gobot.NewGobot()
          firmataAdaptor := firmata.NewFirmataAdaptor("firmata", "/dev/ttyACM0")
          sensor := gpio.NewAnalogSensorDriver(firmataAdaptor, "sensor", "0")
          led := gpio.NewLedDriver(firmataAdaptor, "led", "3")
        ...
        

%section.how-to#HowToUse
  %h2 How To Use
  %p 
    This example detects lower and upper limits on a photoresistor sensor.
  :markdown
        :::go
        package main

        import (
          "fmt"

          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot/platforms/firmata"
          "github.com/hybridgroup/gobot/platforms/gpio"
        )

        func main() {
          gbot := gobot.NewGobot()

          firmataAdaptor := firmata.NewFirmataAdaptor("firmata", "/dev/ttyACM0")
          sensor := gpio.NewAnalogSensorDriver(firmataAdaptor, "sensor", "0")
          led := gpio.NewLedDriver(firmataAdaptor, "led", "3")

          work := func() {
            gobot.On(sensor.Event("data"), func(data interface{}) {
              brightness := uint8(
                gobot.ToScale(gobot.FromScale(float64(data.(int)), 0, 1024), 0, 255),
              )
              fmt.Println("sensor", data)
              fmt.Println("brightness", brightness)
              led.Brightness(brightness)
            })
          }

          robot := gobot.NewRobot("sensorBot",
            []gobot.Connection{firmataAdaptor},
            []gobot.Device{sensor, led},
            work,
          )

          gbot.AddRobot(robot)

          gbot.Start()
        }

%section.public-methods
  .commands-api#Commands
    = partial "/documentation/drivers/partials/gpio/commands_analog_sensor"
  .commands-api#Events
    = partial "/documentation/drivers/partials/gpio/events_analog_sensor"   

%section.circuit#Circuit
  %h2 Circuit 
  .description-circuit
    %p
  .image-circuit
    %img{:src => "/documentation/drivers/breadboards/gpio/analog_sensor_bb.png", :alt => ""}/ 
  .clear 
   

%section.compatibility.hardware#Compatability
  %h2 Compatibility
  =# TODO: Update platform list with all that work with this driver in gobot.
  .devices
    = partial "documentation/partials/devices_platforms"
