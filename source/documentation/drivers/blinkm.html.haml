---
title: Gobot - BlinkM Driver
author: The Hybrid Group
page_title: Drivers
page_subtitle: Gobot has a extensible system for connecting to hardware devices.
page_title_docs: BlinkM
page_subtitle_docs: Driver
page_title_show: true
layout: documentation
subnav_driver: true
subnav_circuit_driver: true
active_menu_docs: true
subnavjs: true
---

%section.intro
  =image_tag "/images/devices/blinkm.jpg", class: "display"

.info-intro
  %p
    Allows user to control BlinkM RGB LED via i2c interface.
  %a{ :href => "http://godoc.org/gobot.io/x/gobot/platforms/i2c#BlinkMDriver", :class => "api-link", :target => "_blank"} API Reference
.clear

%section.how-to#HowToConnect
  %h2 How To Connect
  :markdown
    Install the package with: `go get gobot.io/x/gobot`

    You must pass in an Adaptor that supports the `i2c.Connector` interface to use with this Driver.

    You can use the following optional params if you wish to change the I2C Bus and I2C Address from the default values.

      `i2c.WithBus(int)`:	bus to use with this driver.

      `i2c.WithAddress(int)`:	address to use with this driver

  :markdown
        :::go
        // default bus/address
        blinkm := i2c.NewBlinkMDriver(adaptor)

        // optional bus/address
        blinkm := i2c.NewBlinkMDriver(adaptor,
                                       i2c.WithBus(0),
                                       i2c.WithAddress(0x34))

%section.how-to#HowToUse
  %h2 How To Use
  %p Example using a BlinkM and Arduino
  :markdown
        :::go
        package main

        import (
           "fmt"
           "time"

           "gobot.io/x/gobot"
           "gobot.io/x/gobot/drivers/i2c"
           "gobot.io/x/gobot/platforms/firmata"
        )

        func main() {
           firmataAdaptor := firmata.NewAdaptor("/dev/ttyACM0")
           blinkm := i2c.NewBlinkMDriver(firmataAdaptor)

           work := func() {
         	  gobot.Every(3*time.Second, func() {
         		  r := byte(gobot.Rand(255))
         		  g := byte(gobot.Rand(255))
         		  b := byte(gobot.Rand(255))
         		  blinkm.Rgb(r, g, b)
         		  color, _ := blinkm.Color()
         		  fmt.Println("color", color)
         	  })
           }

           robot := gobot.NewRobot("blinkmBot",
         	  []gobot.Connection{firmataAdaptor},
         	  []gobot.Device{blinkm},
         	  work,
           )

           robot.Start()
        }


%section.circuit#Circuit
  %h2 Circuit
  .description-circuit
    %p
  .image-circuit
    %img{:src => "/documentation/drivers/breadboards/i2c/blinkm_bb.png", :alt => ""}/
  .clear

%section.Compatibility.hardware#Compatibility
  %h2 Compatibility
  .devices
    = partial "/partials/platforms_for_driver", locals: { driver: "BlinkM" }
