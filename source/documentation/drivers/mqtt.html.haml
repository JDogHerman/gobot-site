---
title: Gobot - MQTT Driver
author: The Hybrid Group
page_title: Drivers
page_subtitle: Gobot has an extensible system for connecting to hardware devices.
page_title_docs: MQTT
page_subtitle_docs: Driver
page_title_show: true
layout: documentation
subnav_driver: true
subnav_circuit_driver: true
active_menu_docs: true
subnavjs: true
---

%section.intro
  = image_tag "/images/devices/mqtt.jpg", class: "display"
  .info-intro
    %p
      The Gobot driver to the MQTT adapter.
    %a{ :href => "http://godoc.org/github.com/hybridgroup/gobot/platforms/mqtt#MqttDriver", :class => "api-link", :target => "_blank"} API Reference
  .clear
  
%section.how_to#HowToConnect
  %h2 How To Connect
  :markdown
        :::go
        package main

        import (
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot/platforms/mqtt"
          "fmt"
          "time"
        )

        func main() {
          gbot := gobot.NewGobot()

          mqttAdaptor := mqtt.NewMqttAdaptor("server", "tcp://0.0.0.0:1883", "pinger")
        ...


%section.how-to#HowToUse
  %h2 How To Use
  %p This example detects when a button has been pushed, it turns on and off a LED
 
  :markdown
        :::go
        package main

        import (
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot/platforms/mqtt"
          "fmt"
          "time"
        )

        func main() {
          gbot := gobot.NewGobot()

          mqttAdaptor := mqtt.NewMqttAdaptor("server", "tcp://0.0.0.0:1883", "pinger")

          work := func() {
            mqttAdaptor.On("hello", func(data []byte) {
              fmt.Println("hello")
            })
            mqttAdaptor.On("hola", func(data []byte) {
              fmt.Println("hola")
            })
            data := []byte("o")
            gobot.Every(1*time.Second, func() {
              mqttAdaptor.Publish("hello", data)
            })
            gobot.Every(5*time.Second, func() {
              mqttAdaptor.Publish("hola", data)
            })
          }

          robot := gobot.NewRobot("mqttBot",
            []gobot.Connection{mqttAdaptor},
            work,
          )

          gbot.AddRobot(robot)

          gbot.Start()
        }

%section.compatability.hardware#Compatability
  %h2 Compatability
  .devices
    = partial "/partials/platforms_for_driver", locals: { driver: "MQTT" }
