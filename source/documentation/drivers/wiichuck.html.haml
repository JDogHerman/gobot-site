---
title: Gobot - Wii Nunchuck Driver
author: The Hybrid Group
page_title: Drivers
page_subtitle: Cylon has a extensible system for connecting to hardware devices.
page_title_docs: Wii Nunchuk
page_subtitle_docs: Driver
page_title_show: true
layout: documentation
subnav_driver: true
active_menu_docs: true
subnavjs: true

arduino_platform: true
beaglebone_platform: true
digispark_platform: true
---
-content_for :js_accordeon do
  :javascript
    $("#driver-panel").addClass("active-panel");
    $("#i2c li:nth-child(3)").addClass("active-link");
    $(".accordion-docs dt:nth-child(9) a:nth-child(2) img").addClass("rotate");

%section.intro
  =image_tag "/images/devices/wii-chuck.jpg", class: "display"
  .info-intro
    %p Allows user to use a Nintendo Wii Nunchuck controller via i2c interface
  .clear
  
%section.how-to#HowToConnect
  %h2 How To Connect
  :markdown
    Install the library with: `go get github.com/hybridgroup/gobot && go install github.com/hybridgroup/platforms/i2c`
  %h3 For Arduino:
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot/platforms/firmata"
          "github.com/hybridgroup/gobot/platforms/i2c"
        )

        func main() {
          gbot := gobot.NewGobot()
          firmataAdaptor := firmata.NewFirmataAdaptor("firmata", "/dev/ttyACM0")
          wiichuck := i2c.NewWiichuckDriver(firmataAdaptor, "wiichuck")
        ...


%section.how-to#HowToUse
  %h2 How To Use
  %h3 Example using a Nintendo Wii Nunchuck.
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot/platforms/firmata"
          "github.com/hybridgroup/gobot/platforms/i2c"
        )

        func main() {
          gbot := gobot.NewGobot()
          firmataAdaptor := firmata.NewFirmataAdaptor("firmata", "/dev/ttyACM0")
          wiichuck := i2c.NewWiichuckDriver(firmataAdaptor, "wiichuck")

          work := func() {
            gobot.On(wiichuck.Events["joystick"], func(data interface{}) {
              fmt.Println("joystick", data)
            })

            gobot.On(wiichuck.Events["c_button"], func(data interface{}) {
              fmt.Println("c")
            })

            gobot.On(wiichuck.Events["z_button"], func(data interface{}) {
              fmt.Println("z")
            })
          }

          gbot.Robots = append(gbot.Robots,
            gobot.NewRobot("chuck", []gobot.Connection{firmataAdaptor}, []gobot.Device{wiichuck}, work))

          gbot.Start()
        }

%section.public-methods
  .commands-api#Commands
    %h1 Functions
    %p No commands
  .commands-api#Events
    = partial "/documentation/drivers/partials/i2c/events_wiichuck"   

%section.compatability.hardware#Compatability
  %h2 Compatability
  .devices
    = partial "documentation/partials/devices_platforms"
