---
layout: documentation
page_title_show: true
title: "Gobot Example - opencv_window"
page_title: "Example: opencv_window"
author: The Hybrid Group
description: A Gobot code example
page_subtitle: "<a href='https://github.com/hybridgroup/gobot/tree/master/examples' target='_blank'>View In Repo</a>"
active_menu_docs: true
---
-content_for :js_accordeon do
  :javascript
    $("#example-panel").addClass("active-panel");
    $(".accordion-docs dt:nth-child(13) a:nth-child(2) img").addClass("rotate");

.example
  :markdown
        :::go
        package main

        import (
        	cv "github.com/hybridgroup/go-opencv/opencv"
        	"github.com/hybridgroup/gobot"
        	"github.com/hybridgroup/gobot/platforms/opencv"
        )

        func main() {
        	gbot := gobot.NewGobot()

        	window := opencv.NewWindowDriver("window")
        	camera := opencv.NewCameraDriver("camera", 0)

        	work := func() {
        		gobot.On(camera.Events["Frame"], func(data interface{}) {
        			window.ShowImage(data.(*cv.IplImage))
        		})
        	}

        	gbot.Robots = append(gbot.Robots,
        		gobot.NewRobot("cameraBot", []gobot.Connection{}, []gobot.Device{window, camera}, work))

        	gbot.Start()
        }

