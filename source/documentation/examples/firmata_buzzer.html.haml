---
layout: documentation
page_title_show: true
title: "Gobot Example - firmata_buzzer"
page_title: "Example: firmata_buzzer"
author: The Hybrid Group
description: A Gobot code example
page_subtitle: "<a href='https://github.com/hybridgroup/gobot/tree/master/examples' target='_blank'>View In Repo</a>"
active_menu_docs: true
---
.example
  :markdown
        :::go
        package main

        import (
        	"time"

        	"gobot.io/x/gobot"
        	"gobot.io/x/gobot/drivers/gpio"
        	"gobot.io/x/gobot/platforms/firmata"
        )

        func main() {
        	firmataAdaptor := firmata.NewAdaptor("/dev/ttyACM0")
        	buzzer := gpio.NewBuzzerDriver(firmataAdaptor, "3")

        	work := func() {
        		type note struct {
        			tone     float64
        			duration float64
        		}

        		song := []note{
        			{gpio.C4, gpio.Quarter},
        			{gpio.C4, gpio.Quarter},
        			{gpio.G4, gpio.Quarter},
        			{gpio.G4, gpio.Quarter},
        			{gpio.A4, gpio.Quarter},
        			{gpio.A4, gpio.Quarter},
        			{gpio.G4, gpio.Half},
        			{gpio.F4, gpio.Quarter},
        			{gpio.F4, gpio.Quarter},
        			{gpio.E4, gpio.Quarter},
        			{gpio.E4, gpio.Quarter},
        			{gpio.D4, gpio.Quarter},
        			{gpio.D4, gpio.Quarter},
        			{gpio.C4, gpio.Half},
        		}

        		for _, val := range song {
        			buzzer.Tone(val.tone, val.duration)
        			time.Sleep(10 * time.Millisecond)
        		}
        	}

        	robot := gobot.NewRobot("bot",
        		[]gobot.Connection{firmataAdaptor},
        		[]gobot.Device{buzzer},
        		work,
        	)

        	robot.Start()
        }

