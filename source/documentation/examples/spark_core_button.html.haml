---
layout: documentation
page_title_show: true
title: "Gobot Example - spark_core_button"
page_title: "Example: spark_core_button"
author: The Hybrid Group
description: A Gobot code example
page_subtitle: "<a href='https://github.com/hybridgroup/gobot/tree/master/examples' target='_blank'>View In Repo</a>"
active_menu_docs: true
---
-content_for :js_accordeon do
  :javascript
    $("#example-panel").addClass("active-panel");
    $(".accordion-docs dt:nth-child(13) a:nth-child(2) img").addClass("rotate");

.example
  :markdown
        :::go
        package main

        import (
        	"github.com/hybridgroup/gobot"
        	"github.com/hybridgroup/gobot/platforms/gpio"
        	"github.com/hybridgroup/gobot/platforms/spark"
        )

        func main() {
        	master := gobot.NewGobot()

        	sparkCore := spark.NewSparkCoreAdaptor("spark", "device_id", "access_token")
        	led := gpio.NewLedDriver(sparkCore, "led", "D7")
        	button := gpio.NewButtonDriver(sparkCore, "button", "D5")

        	work := func() {
        		gobot.On(button.Events["push"], func(data interface{}) {
        			led.On()
        		})

        		gobot.On(button.Events["release"], func(data interface{}) {
        			led.Off()
        		})
        	}

        	master.Robots = append(master.Robots,
        		gobot.NewRobot("spark", []gobot.Connection{sparkCore}, []gobot.Device{button, led}, work))

        	master.Start()
        }

