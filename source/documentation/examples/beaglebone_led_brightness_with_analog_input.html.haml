---
layout: documentation
page_title_show: true
title: "Gobot Example - beaglebone_led_brightness_with_analog_input"
page_title: "Example: beaglebone_led_brightness_with_analog_input"
author: The Hybrid Group
description: A Gobot code example
page_subtitle: "<a href='https://github.com/hybridgroup/gobot/tree/master/examples' target='_blank'>View In Repo</a>"
active_menu_docs: true
---
-content_for :js_accordeon do
  :javascript
    $("#example-panel").addClass("active-panel");
    $(".accordion-docs dt:nth-child(13) a:nth-child(2) img").addClass("rotate");

.example
  :markdown
        :::go
        package main

        import (
        	"fmt"
        	"github.com/hybridgroup/gobot"
        	"github.com/hybridgroup/gobot/platforms/beaglebone"
        	"github.com/hybridgroup/gobot/platforms/gpio"
        	"time"
        )

        func main() {
        	gbot := gobot.NewGobot()
        	beagleboneAdaptor := beaglebone.NewBeagleboneAdaptor("beaglebone")

        	sensor := gpio.NewAnalogSensorDriver(beagleboneAdaptor, "sensor", "P9_33")
        	led := gpio.NewLedDriver(beagleboneAdaptor, "led", "P9_14")

        	work := func() {
        		gobot.Every(100*time.Millisecond, func() {
        			val := sensor.Read()
        			brightness := uint8(gobot.ToScale(gobot.FromScale(float64(val), 0, 1024), 0, 255))
        			fmt.Println("sensor", val)
        			fmt.Println("brightness", brightness)
        			led.Brightness(brightness)
        		})
        	}

        	gbot.Robots = append(gbot.Robots,
        		gobot.NewRobot("sensorBot", []gobot.Connection{beagleboneAdaptor}, []gobot.Device{sensor, led}, work))
        	gbot.Start()
        }

