---
title: Spark with Gobot
author: The Hybrid Group
page_title: Platforms
page_subtitle: Gobot has a extensible system for connecting to hardware devices. The following robotics and physical computing platforms are currently supported.
page_title_docs: Spark
page_subtitle_docs: "<a href='https://github.com/hybridgroup/gobot-spark' target='_blank' class='repository'>Repository</a> <a class='issues' href='https://github.com/hybridgroup/gobot-spark/issues' target='_blank'>Issues</a>"
page_title_show: true
layout: documentation
subnav_platform: true
active_menu_platforms: true
subnavjs: true

button_driver: true
led_driver: true
servo_driver: true
---
-content_for :js_accordeon do
  :javascript
    $("#platform-panel").addClass("active-panel");
    $("#platform-panel ul li:nth-child(10)").addClass("active-link");
    $(".accordion-docs dt:nth-child(7) a:nth-child(2) img").addClass("rotate");

%section.intro
  = image_tag "/images/devices/spark.jpg", class: "display"
  .info-intro
    %p The Spark Core contains a Wi-Fi connected microcontroller. Once it connects to a Wi-Fi network, it automatically connects with a central server (the "Spark Cloud") and stays connected so it can be controlled from external systems, such as a Gobot program.
    %p
      %b
        To run gobot programs please make sure you are running default tinker firmware on the Spark Core.
    %p
      For more info about the Spark platform go to
      = succeed "." do
        = link_to "https://www.spark.io/", "https://www.spark.io/", target: :blank
  .clear
  
%section.how-to#HowToInstall
  %h2 How To Install
  %p Installing Gobot with Spark support is pretty easy.
  :markdown
        :::ruby
        go get github.com/hybridgroup/gobot && go install github.com/hybridgroup/platforms/spark
%section.how-to#HowToUse
  %h2 How To Use
  %p This small program lets you turn on or off a LED for every 2 sec.
  :markdown
        :::go
        package main

        import (
            "time"

            "github.com/hybridgroup/gobot"
            "github.com/hybridgroup/gobot/platforms/gpio"
            "github.com/hybridgroup/gobot/platforms/spark"
        )

        func main() {
            gbot := gobot.NewGobot()

            sparkCore := spark.NewSparkCoreAdaptor("spark", "device_id", "access_token")
            led := gpio.NewLedDriver(sparkCore, "led", "D7")

            work := func() {
                gobot.Every(1*time.Second, func() {
                    led.Toggle()
                })
            }

            robot := gobot.NewRobot("spark",
                []gobot.Connection{sparkCore},
                []gobot.Device{led},
                work,
            )

            gbot.AddRobot(robot)

            gbot.Start()
        }

%section.drivers#Drivers
  %h2 Drivers
  
  %p Available drivers for the spark platform are listed below, the drivers contain detailed documentation and examples of what kinds of physical computing (using Gobot and Golang) you can be doing:

  .hardware
    %h2 GPIO Drivers
    .devices 
      = partial "documentation/partials/devices_gpio_drivers"


