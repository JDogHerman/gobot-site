---
title: MQTT with Gobot
author: The Hybrid Group
page_title: Platforms
page_subtitle: Gobot has an extensible system for connecting to hardware devices. The following robotics and physical computing platforms are currently supported.
page_title_docs: MQTT
page_subtitle_docs: "<a href='https://github.com/hybridgroup/gobot/tree/master/platforms/mqtt' target='_blank' class='repository'>Repository</a> <a class+'issues' href='https://github.com/hybridgroup/gobot/issues' target='_blank'>Issues</a>"
page_title_show: true
layout: documentation
subnav_platform: true
active_menu_platforms: true
subnavjs: true
---

%section.intro
  = image_tag "/images/devices/mqtt.jpg", class: "display"
  .info-intro
    %p
      MQTT is an Internet of Things connectivity protocol featuring a lightweight publish/subscribe messaging transport. It is useful for it's small code footprint and minimal network bandwidth usage.
    %p
      For more info about the MQTT adaptor click
      = succeed "." do
        = link_to "here", "http://mqtt.org/", target: :blank
  .clear

%section.how-to#HowToInstall
  %h2 How To Install
  %p First you must install the appropriate Go packages
  :markdown
        :::bash
        go get github.com/hybridgroup/gobot && go install github.com/hybridgroup/gobot/platforms/mqtt

%section.how-to#HowToUse
  %h2 How To Use
  :markdown

    Before running the example, make sure you have an MQTT message broker running somewhere you can connect to

        :::go
        package main

        import (
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot/platforms/mqtt"
          "fmt"
          "time"
        )

        func main() {
          gbot := gobot.NewGobot()

          mqttAdaptor := mqtt.NewMqttAdaptor("server", "tcp://0.0.0.0:1883", "pinger")

          work := func() {
            mqttAdaptor.On("hello", func(data []byte) {
              fmt.Println("hello")
            })
            mqttAdaptor.On("hola", func(data []byte) {
              fmt.Println("hola")
            })
            data := []byte("o")
            gobot.Every(1*time.Second, func() {
              mqttAdaptor.Publish("hello", data)
            })
            gobot.Every(5*time.Second, func() {
              mqttAdaptor.Publish("hola", data)
            })
          }

          robot := gobot.NewRobot("mqttBot",
            []gobot.Connection{mqttAdaptor},
            work,
          )

          gbot.AddRobot(robot)

          gbot.Start()
        }

%section.how-to#HowToConnect
  %h2 How To Connect
  :markdown
    Before using mqtt, you'll need to have a MQTT broker running in order to connect/publish/subscribe to messages.

    A good, simple broker is [mosca](https://github.com/mcollina/mosca).
    The developers have a [tutorial on using Mosca as a standalone service](https://github.com/mcollina/mosca/wiki/Mosca-as-a-standalone-service.).

%section.drivers#Drivers
  %h2 Drivers
  %p There is only one driver for the MQTT.
  .hardware
    .devices
      = partial "/partials/devices_for_platform", locals: { platform: "MQTT" }
