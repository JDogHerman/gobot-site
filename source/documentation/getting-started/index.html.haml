---
title: Getting Started - Gobot - Golang framework for robotics, physical computing, and the Internet of Things
author: The Hybrid Group
description: Gobot Getting Started
page_title: Getting Started
page_subtitle: A Guide by Humans, for Humans.
active_menu_docs: true

page_title_show: true
layout: documentation
---

%section.how-to
  %h2 Install Go
  %p 
  Go is an open source programming language which makes it easy to build simple, 
  reliable, and efficient software. Follow the 
  = link_to "official installation instructions","http://golang.org/doc/install", target:"blank"
  to get started.

%section
  %h2 Install Gobot
  :markdown
    Download Gobot and it's required dependencies with:   
      `go get -d -u github.com/hybridgroup/gobot/..`


  %section
  %h2 Programming Hardware
  %p 
  Now you're ready to write some code! Take a look at the examples below to get
  started using Gobot.

%section
  %h4 Arduino with LED.
  :markdown
    This is the "Hello World" of physical computing, a blinking led! This program
    connects to an [arduino](/documentation/platforms/arduino/)
    on port `/dev/ttyACM0` and flashes an [led](/documentation/drivers/led/)
    every one second. Take note that your arduino may be on a different port number.
  :markdown
        :::go
        import (
                "time"

                "github.com/hybridgroup/gobot"
                "github.com/hybridgroup/gobot/platforms/firmata"
                "github.com/hybridgroup/gobot/platforms/gpio"
        )

        func main() {
                gbot := gobot.NewGobot()

                firmataAdaptor := firmata.NewFirmataAdaptor("arduino", "/dev/ttyACM0")
                led := gpio.NewLedDriver(firmataAdaptor, "led", "13")

                work := func() {
                        gobot.Every(1*time.Second, func() {
                                led.Toggle()
                        })
                }

                robot := gobot.NewRobot("bot",
                        []gobot.Connection{firmataAdaptor},
                        []gobot.Device{led},
                        work,
                )

                gbot.AddRobot(robot)

                gbot.Start()
        }

  %h3 Sphero
  :markdown
    This example connects to a [sphero](/documentation/platforms/sphero/)
    on port `/dev/rfcomm0` and randomly rolls in a new direction every two seconds.
    Take note that your sphero may be on a different port number.
  :markdown
        :::go
        package main

        import (
                "fmt"
                "time"

                "github.com/hybridgroup/gobot"
                "github.com/hybridgroup/gobot/platforms/sphero"
        )

        func main() {
                gbot := gobot.NewGobot()

                adaptor := sphero.NewSpheroAdaptor("Sphero", "/dev/rfcomm0")
                spheroDriver := sphero.NewSpheroDriver(adaptor, "sphero")

                work := func() {
                        gobot.Every(2*time.Second, func() {
                                spheroDriver.Roll(30, uint16(gobot.Rand(360)))
                        })

                }

                robot := gobot.NewRobot("sphero",
                        []gobot.Connection{adaptor},
                        []gobot.Device{spheroDriver},
                        work,
                )

                gbot.AddRobot(robot)

                gbot.Start()
        }

%section
  %h2 Going further
  :markdown
    Be sure to check out the rest of our [examples](/documentation/examples/) 
    as well as our [platforms](/documentation/platforms/), [guides](/documentation/guides)
    and [core](/documentation/core) api documentation to help get started with your hardware application. 

%section.footer
