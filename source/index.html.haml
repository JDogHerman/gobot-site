---
hero: true
social: true
catcher: true

title: Gobot - Golang framework for robotics, physical computing, and the Internet of Things
author: The Hybrid Group
description: Gobot is a framework for robotics, physical computing, and the Internet of Things, written in the Go programming language.
layout: home

hero_title: "Go, Robot, Go! Golang Powered Robotics"
hero_subtitle: "Next generation robotics framework with support for <a href='#platforms'>10 different platforms</a>"

img_character: "<img src='images/elements/gophy.png'>"

catcher_phrase: Ready to build the next big thing with Go?
getting_started_button: "<a href='/documentation/getting-started' class='cta'> Get Started</a>"
---

.index-content

  %h2 About
  %p 
    Gobot is a framework and set of libraries in the 
    =link_to "Go programming language", "http://golang.org/", target: "_blank" 
    for robotics, physical computing, and the Internet of Things.

  %p It provides a simple, yet powerful way to create solutions that incorporate multiple, different hardware devices at the same time.

  %p 
    Want to use Ruby on robots? Check out our sister project Artoo 
    = link_to "(http://artoo.io).", "http://artoo.io", target: :blank

  %p 
    Want to use JavaScript? Check out our sister project CylonJS 
    = link_to "(http://cylonjs.com", "http://cylonjs.com", target: :blank

.aside.right
  = current_page.data.img_character

.clear

%h2  Meet The Code

%p Gobot makes commanding robots incredibly simple and fun.

%p All you need to get started is install the library with :  
:markdown
  `go get -u github.com/hybridgroup/gobot`.

%p 
  :markdown
    Then install additional libraries for whatever hardware support you want to use from your robot. For example, 
    `go get -u github.com/hybridgroup/gobot-sphero` 
    to use Gobot with a Sphero.

%h2  Gobot with Sphero
:markdown
      :::go
      package main

      import (
        "github.com/hybridgroup/gobot"
        "github.com/hybridgroup/gobot-sphero"
      )

      func main() {

        spheroAdaptor := new(gobotSphero.SpheroAdaptor)
        spheroAdaptor.Name = "Sphero"
        spheroAdaptor.Port = "/dev/rfcomm0"

        sphero := gobotSphero.NewSphero(spheroAdaptor)
        sphero.Name = "Sphero"

        work := func() {
          gobot.Every("2s", func() {
            sphero.Roll(100, uint16(gobot.Rand(360)))
          })
        }

        robot := gobot.Robot{
          Connections: []gobot.Connection{spheroAdaptor},
          Devices:     []gobot.Device{sphero},
          Work:        work,
        }

        robot.Start()
      }

%h2  Gobot with Arduino
:markdown
      :::go
      package main

      import (
        "github.com/hybridgroup/gobot"
        "github.com/hybridgroup/gobot-firmata"
        "github.com/hybridgroup/gobot-gpio"
      )

      func main() {

        firmata := new(gobotFirmata.FirmataAdaptor)
        firmata.Name = "firmata"
        firmata.Port = "/dev/ttyACM0"

        led := gobotGPIO.NewLed(firmata)
        led.Name = "led"
        led.Pin = "13"

        work := func() {
          gobot.Every("1s", func() {
            led.Toggle()
          })
        }

        robot := gobot.Robot{
          Connections: []gobot.Connection{firmata},
          Devices:     []gobot.Device{led},
          Work:        work,
        }

        robot.Start()
      }

%h2#platforms Platform Support
%p
  Gobot has a extensible system for connecting to hardware devices. The following robotics and physical computing platforms are currently supported:

  %p.important-title 
    10 Platforms

  %ul.homepage-platform
    %li
      .title
        = link_to "ARDrone", "http://ardrone2.parrot.com/", target:"_blank"  
      %a{:href => "/documentation/platforms/ardrone"} 
        %img{src: "/images/devices/ardrone.jpg", style: "width: 90%"}  
      .repo
        = link_to "repo", "https://github.com/hybridgroup/gobot-ardrone", target:"_blank"

    %li
      .title
        = link_to "Arduino", "http://www.arduino.cc/", target:"_blank" 
      %a{:href => "/documentation/platforms/arduino"} 
        %img{src: "/images/devices/arduino.jpg", style: "width: 90%"}  
      .repo
        = link_to "repo", "https://github.com/hybridgroup/gobot-firmata", target:"_blank"

    %li
      .title
        = link_to "Beaglebone Black", "http://beagleboard.org/Products/BeagleBone+Black/", target:"_blank" 
      %a{:href => "/documentation/platforms/beaglebone"} 
        %img{src: "/images/devices/beaglebone.jpg", style: "width: 90%"}  
      .repo
        = link_to "repo", "https://github.com/hybridgroup/gobot-beaglebone", target:"_blank"

    %li
      .title
        = link_to "Digispark", "http://digistump.com/category/1", target:"_blank"  
      %a{:href => "/documentation/platforms/digispark"} 
        %img{src: "/images/devices/digispark.jpg", style: "width: 90%"}  
      .repo
        = link_to "repo", "https://github.com/hybridgroup/gobot-digispark", target:"_blank" 

    %li
      .title
        = link_to "Joystick", "http://en.wikipedia.org/wiki/Joystick", target:"_blank"  
      %a{:href => "/documentation/platforms/joystick"} 
        %img{src: "/images/devices/joystick.jpg", style: "width: 90%"}  
      .repo
        = link_to "repo", "https://github.com/hybridgroup/gobot-joystick", target:"_blank"

    %li
      .title
        = link_to "Leap Motion", "https://www.leapmotion.com/", target:"_blank"  
      %a{:href => "/documentation/platforms/leapmotion"} 
        %img{src: "/images/devices/leap_motion.jpg", style: "width: 90%"}  
      .repo
        = link_to "repo", "https://github.com/hybridgroup/gobot-leapmotion", target:"_blank"

    %li
      .title
        = link_to "Neurosky", "http://neurosky.com/products-markets/eeg-biosensors/hardware/", target:"_blank"  
      %a{:href => "/documentation/platforms/neurosky"} 
        %img{src: "/images/devices/neurosky.jpg", style: "width: 90%"}  
      .repo
        = link_to "repo", "https://github.com/hybridgroup/gobot-neurosky", target:"_blank"

    %li
      .title
        = link_to "OpenCV", "http://opencv.org/", target:"_blank"  
      %a{:href => "/documentation/platforms/opencv"} 
        %img{src: "/images/devices/opencv.jpg", style: "width: 90%"}  
      .repo
        = link_to "repo", "https://github.com/hybridgroup/gobot-opencv", target:"_blank"

    %li
      .title
        = link_to "Spark", "https://www.spark.io/", target:"_blank"  
      %a{:href => "/documentation/platforms/spark"} 
        %img{src: "/images/devices/spark.jpg", style: "width: 90%"}  
      .repo
        = link_to "repo", "https://github.com/hybridgroup/gobot-spark", target:"_blank"

    %li
      .title
        = link_to "Sphero", "http://www.gosphero.com/", target:"_blank"  
      %a{:href => "/documentation/platforms/sphero"} 
        %img{src: "/images/devices/sphero.jpg", style: "width: 90%"}  
      .repo
        = link_to "repo", "https://github.com/hybridgroup/gobot-sphero", target:"_blank"
  .clear

%p Support for many devices that use General Purpose Input/Output (GPIO) have a shared set of drivers provded using the gobot-gpio module:

%p.important-title
  7
  = link_to "GPIO", "https://en.wikipedia.org/wiki/General_Purpose_Input/Output" , target:"_blank" 
  drivers

%ul.homepage-platform
  %li
    .title
      = link_to "Analog Sensor", "/documentation/drivers/analog-sensor"
    %a{:href => "/documentation/drivers/analog-sensor"} 
      %img{src: "/images/devices/analog-sensor.jpg", style: "width: 90%"}  
    .repo
      = link_to "repo", "https://github.com/hybridgroup/gobot-gpio" , target:"_blank"
  %li
    .title
      = link_to "Button", "/documentation/drivers/button"
    %a{:href => "/documentation/drivers/button"} 
      %img{src: "/images/devices/button.jpg", style: "width: 90%"}  
    .repo
      = link_to "repo", "https://github.com/hybridgroup/gobot-gpio" , target:"_blank"
  %li
    .title
      = link_to "Direct Pin", "/documentation/drivers/direct-pin"
    %a{:href => "/documentation/drivers/direct-pin"} 
      %img{src: "/images/devices/direct-pin.jpg", style: "width: 90%"}  
    .repo
      = link_to "repo", "https://github.com/hybridgroup/gobot-gpio" , target:"_blank"
  %li
    .title
      = link_to "LED", "/documentation/drivers/led" 
    %a{:href => "/documentation/drivers/led"} 
      %img{src: "/images/devices/LED.jpg", style: "width: 90%"}  
    .repo
      = link_to "repo", "https://github.com/hybridgroup/gobot-gpio" , target:"_blank"
  %li
    .title
      = link_to "Makey Button", "/documentation/drivers/makey" 
    %a{:href => "/documentation/drivers/makey"} 
      %img{src: "/images/devices/makey.jpg", style: "width: 90%"}  
    .repo
      = link_to "repo", "https://github.com/hybridgroup/gobot-gpio" , target:"_blank"
  %li
    .title
      = link_to "Motor", "/documentation/drivers/motor" 
    %a{:href => "/documentation/drivers/motor"} 
      %img{src: "/images/devices/motor.jpg", style: "width: 90%"}  
    .repo
      = link_to "repo", "https://github.com/hybridgroup/gobot-gpio" , target:"_blank"
  %li
    .title
      = link_to "Servo", "/documentation/drivers/servo"
    %a{:href => "/documentation/drivers/servo"} 
      %img{src: "/images/devices/servo.jpg", style: "width: 90%"}  
    .repo
      = link_to "repo", "https://github.com/hybridgroup/gobot-gpio" , target:"_blank"
.clear

%p Support for devices that use Inter-Integrated Circuit (I2C) have a shared set of drivers provded using the gobot-i2c module:

%p.important-title 
  3
  = link_to "I2C", "https://en.wikipedia.org/wiki/I%C2%B2C", target:"_blank" 
  drivers


%ul.homepage-platform 
  %li  
    .title
      = link_to "BlinkM", "/documentation/drivers/blinkm"
    %a{:href => "/documentation/drivers/blinkm"} 
      %img{src: "/images/devices/blinkm.jpg", style: "width: 90%"}  
    .repo
      = link_to "repo", "https://github.com/hybridgroup/gobot-i2c", target:"_blank"
  %li  
    .title
      = link_to "HMC6352", "/documentation/drivers/hmc6352-compass"
    %a{:href => "/documentation/drivers/hmc6352-compass"} 
      %img{src: "/images/devices/hmc6352-compass.jpg", style: "width: 90%"}  
    .repo
      = link_to "repo", "https://github.com/hybridgroup/gobot-i2c", target:"_blank"
  %li  
    .title
      = link_to "Wii Nunchuck", "/documentation/drivers/wiichuck"
    %a{:href => "/documentation/drivers/wiichuck"} 
      %img{src: "/images/devices/wii-chuck.jpg", style: "width: 90%"}  
    .repo
      = link_to "repo", "https://github.com/hybridgroup/gobot-i2c", target:"_blank"
.clear

%p.important-title 
  See more drivers 
  = link_to "here", "/documentation/drivers"

%p More platforms and drivers are coming soon...

%h2 Getting Started

:markdown
  Install the library with: `go get -u github.com/hybridgroup/gobot`
:markdown
  Then install additional libraries for whatever hardware support you want to use from your robot. For example, `go get -u github.com/hybridgroup/gobot-sphero` to use Gobot with a Sphero.
%p 
  Ready to build Go robots with Gobot? 
  =link_to "Get Started Here!", "", (menu_item("documentation/getting-started"))

%h2 API
%p Gobot includes a RESTful API to query the status of any robot running within a group, including the connection and device status, and execute device commands.

:markdown
  To activate the API, use the `Api` command like this:

      :::go
      master := gobot.GobotMaster()
      gobot.Api(master)

  You can also specify the api host and port, and turn on authentication:

      :::go
      master := gobot.GobotMaster()
      api := gobot.Api(master)
      api.Port = "4000"
      api.Username = "Gort"
      api.Password = "klaatu"

%p
  :markdown 
    In order to use the 
    [robeaux](https://github.com/hybridgroup/robeaux) 
    AngularJS interface with Gobot you simply clone the robeaux repo and place it in the directory of your Gobot program. The robeaux assets must be in a folder called 
    `robeaux`.

%h2 Be Part Of The Robot Evolution
:markdown
  - Code on Github:   [https://github.com/hybridgroup/gobot](https://github.com/hybridgroup/gobot)
  - Join us on IRC:   `#gobotio @ irc.freenode.net`
  - Join us on our [Trello Board](https://trello.com/b/kQPsldtk/gobot).
